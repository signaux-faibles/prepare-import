name: Go

on:
  push:
    branches:
  release:
    types: [published, edited]
  pull_request:
    branches:
      - "master"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v3
        with:
          go-version: 1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Check formatting
        run: |
          make format format-doc
          exit $(git diff | wc -l) # Return a non-zero error code if any output file has changed

      - name: Install test dependencies
        run: |
          sudo apt-get install -y --no-install-recommends gnumeric # more specifically: "ssconvert", for filter_to_diane

      - name: Test
        run: go test ./... -v -coverprofile=coverage.out

      - name: Upload coverage to codacy
        run: |
          go get github.com/schrej/godacov
          go run github.com/schrej/godacov -t ${{ secrets.CODACY_REPOSITORY_TOKEN_FOR_COVERAGE }} -r ./coverage.out -c $GITHUB_SHA

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build ./... -o prepare-import
          cp ./prepare-import ./build-container/prepare-import

      - name: Login to GitHub Container Registry
        id: login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=sha
          flavor: |
            latest=false

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./build-container
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
